---
title: "AE 05: Tidying StatSci Majors"
author: "Zachary Kujala"
---

## Goal

Our ultimate goal in this application exercise is to make the following data visualization.

![](images/statsci-plot.png){fig-alt="Line plot of numbers of Statistical Science majors over the years (2011 - 2021). Degree types represented are BS, BS2, AB, AB2. There is an increasing trend in BS degrees and somewhat steady trend in AB degrees." fig-align="center"}

## Data

The data come from Duke's Office of the University Registrar. The data were downloaded from Duke as a PDF file. The data have been exported to a CSV file for you. Let's load that in.

```{r}
#| label: load-packages-data
#| message: false

library(tidyverse)
library(scales)

statsci <- read_csv("data/statsci.csv")
```

And let's take a look at the data.

```{r}
statsci
```

## Pivoting

-   **Demo:** Pivot the `statsci` data frame *longer* such that each row represents a degree type / year combination and `year` and `n`umber of graduates for that year are columns in the data frame.

```{r}
#| label: pivot

pivot_longer(statsci,
             cols = "2011":"2023",
             names_to = "year",
             values_to = "n"
             )
```

-   **Question:** What is the type of the `year` variable? Why? What should it be?

*The `year` variable is a character type since the values were originally column names in the unpivoted table. They should be changed to numbers.*

-   **Demo:** Start over with pivoting, and this time also make sure `year` is a numerical variable in the resulting data frame.

```{r}
#| label: pivot-with-transform

pivot_longer(statsci,
             cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             )
```

-   **Question:** What does an `NA` mean in this context? *Hint:* The data come from the university registrar, and they have records on every single graduates, there shouldn't be anything "unknown" to them about who graduated when.

*`NA` means that for that year no student graduated with that degree.*

-   **Demo:** Add on to your pipeline that you started with pivoting and convert `NA`s in `n` to `0`s.

```{r}

#| label: convert-na

statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) 
```

::: callout-important
`replace_na(replace = list("n" = 0))` sourced from:

Replace Missing Value NA with Specified Values. (n.d.). DataBrewer. <https://www.databrewer.co/R/data-wrangling/tidyr/replace-NA-with-specified-values>
:::

-   **Demo:** In our plot the degree types are BS, BS2, AB, and AB2. This information is in our dataset, in the `degree` column, but this column also has additional characters we don't need. Create a new column called `degree_type` with levels BS, BS2, AB, and AB2 (in this order) based on `degree`. Do this by adding on to your pipeline from earlier.

```{r}
#| label: degree-type

statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) |>
  mutate(degree_type = str_replace_all(
    degree, "Statistical Science \\(|\\)", "")) |>
  arrange(factor(degree_type, levels = c("BS", "BS2", "AB", "AB2")))
```

::: callout-important
`mutate(degree_type = str_replace_all('degree, "Statistical Science \\(|\\)", ""))`sourced from:

FJCC. (2020, June 8). *Removing Asterisk and Brackets from a column.* Posit Community. <https://forum.posit.co/t/removing-asterisk-and-brackets-from-a-column/69095/2>

`arrange(factor(levels = c()))` sourced from:

Jim. (2022, June 2). *Arrange the rows in a specific sequence in R.* R Bloggers. <https://www.r-bloggers.com/2022/06/arrange-the-rows-in-a-specific-sequence-in-r/>
:::

-   **Your turn:** Now we start making our plot, but let's not get too fancy right away. Create the following plot, which will serve as the "first draft" on the way to our [Goal]. Do this by adding on to your pipeline from earlier.

![](images/statsci-plot-draft.png){fig-alt="Line plot of numbers of Statistical Science majors over the years (2011 - 2021). Degree types represented are BS, BS2, AB, AB2. There is an increasing trend in BS degrees and somewhat steady trend in AB degrees." fig-align="center"}

```{r}
#| label: plot-draft

statsci_longer <- statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) |>
  mutate(degree_type = str_replace_all(
    degree, "Statistical Science \\(|\\)", "")) |>
  arrange(factor(degree_type, levels = c("BS", "BS2", "AB", "AB2")))

ggplot(statsci_longer, aes(x = year, y = n)) +
  geom_line(aes(color = degree_type)) +
  geom_point(aes(color = degree_type)) +
  scale_color_discrete(breaks = c('BS', 'BS2', 'AB', 'AB2'))

```

::: callout-important
`scale_color_discrete(breaks = c())`sourced from:

Bobbit, Zach. (2021, October 28). *How to Change Order of Items in ggplot2 Legend*. Statology. <https://www.statology.org/ggplot-legend-order/>
:::

-   **Your turn:** What aspects of the plot need to be updated to go from the draft you created above to the [Goal] plot at the beginning of this application exercise.

*Adding axis titles, adding a title, moving the legend, changing the theme of the plot, changing the x-axis to show every second year, adding a source for the data.*

-   **Demo:** Update x-axis scale such that the years displayed go from 2011 to 2023 in increments of 2 years. Do this by adding on to your pipeline from earlier.

```{r}
#| label: plot-improve-1

statsci_longer <- statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) |>
  mutate(degree_type = str_replace_all(
    degree, "Statistical Science \\(|\\)", "")) |>
  arrange(factor(degree_type, levels = c("BS", "BS2", "AB", "AB2")))

ggplot(statsci_longer, aes(x = year, y = n)) +
  geom_line(aes(color = degree_type)) +
  geom_point(aes(color = degree_type)) +
  scale_color_discrete(breaks = c('BS', 'BS2', 'AB', 'AB2')) +
  scale_x_continuous(breaks = c(2011, 2013, 2015, 2017, 2019, 2021, 2023))

```

-   **Demo:** Update line colors using the following level / color assignments. Once again, do this by adding on to your pipeline from earlier.
    -   "BS" = "cadetblue4"

    -   "BS2" = "cadetblue3"

    -   "AB" = "lightgoldenrod4"

    -   "AB2" = "lightgoldenrod3"

```{r}
#| label: plot-improve-2

statsci_longer <- statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) |>
  mutate(degree_type = str_replace_all(
    degree, "Statistical Science \\(|\\)", "")) |>
  arrange(factor(degree_type, levels = c("BS", "BS2", "AB", "AB2")))

ggplot(statsci_longer, aes(x = year, y = n)) +
  geom_line(aes(color = degree_type)) +
  geom_point(aes(color = degree_type)) +
  scale_color_discrete(
    breaks = c('BS', 'BS2', 'AB', 'AB2'), 
    type = c("lightgoldenrod4","lightgoldenrod3","cadetblue4","cadetblue3")) +
  scale_x_continuous(breaks = c(2011, 2013, 2015, 2017, 2019, 2021, 2023))

```

::: callout-important
`scale_color_discrete(type = c())` sourced from:

benson23. (2023, June 1). *How to change colors when using scale_fill_discrete in R?* Stack Overflow. <https://stackoverflow.com/a/76381528>
:::

-   **Your turn:** Update the plot labels (`title`, `subtitle`, `x`, `y`, and `caption`) and use `theme_minimal()`. Once again, do this by adding on to your pipeline from earlier.

```{r}
#| label: plot-improve-3

statsci_longer <- statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) |>
  mutate(degree_type = str_replace_all(
    degree, "Statistical Science \\(|\\)", "")) |>
  arrange(factor(degree_type, levels = c("BS", "BS2", "AB", "AB2")))

ggplot(statsci_longer, aes(x = year, y = n)) +
  geom_line(aes(color = degree_type)) +
  geom_point(aes(color = degree_type)) +
  scale_color_discrete(
    breaks = c('BS', 'BS2', 'AB', 'AB2'), 
    type = c("lightgoldenrod4","lightgoldenrod3","cadetblue4","cadetblue3")) +
  scale_x_continuous(breaks = c(2011, 2013, 2015, 2017, 2019, 2021, 2023)) +
  labs(
    title = "Statistical Science majors over the years",
    subtitle = "Academic years 2011 - 2023",
    x = "Graduation year",
    y = "Number of majors graduating",
    caption = "Source: Office of the University Registrar
    https://registrar.duke.edu/registration/enrollment-statistics",
    color = "Degree type"
  ) + theme_minimal()
```

-   **Demo:** Finally, adding to your pipeline you've developed so far, move the legend into the plot, make its background white, and its border gray. Set `fig-width: 7` and `fig-height: 5` for your plot in the chunk options.

```{r}
#| label: plot-improve-4
#| warning: false
#| fig-width: 7
#| fig-height: 5

statsci_longer <- statsci |> 
pivot_longer(cols = "2011":"2023",
             names_to = "year",
             names_transform = list(year = as.integer),
             values_to = "n"
             ) |> replace_na(replace = list("n" = 0)) |>
  mutate(degree_type = str_replace_all(
    degree, "Statistical Science \\(|\\)", "")) |>
  arrange(factor(degree_type, levels = c("BS", "BS2", "AB", "AB2")))

ggplot(statsci_longer, aes(x = year, y = n)) +
  geom_line(aes(color = degree_type)) +
  geom_point(aes(color = degree_type)) +
  scale_color_discrete(
    breaks = c('BS', 'BS2', 'AB', 'AB2'), 
    type = c("lightgoldenrod4","lightgoldenrod3","cadetblue4","cadetblue3")) +
  scale_x_continuous(breaks = c(2011, 2013, 2015, 2017, 2019, 2021, 2023)) +
  labs(
    title = "Statistical Science majors over the years",
    subtitle = "Academic years 2011 - 2023",
    x = "Graduation year",
    y = "Number of majors graduating",
    caption = "Source: Office of the University Registrar
    https://registrar.duke.edu/registration/enrollment-statistics",
    color = "Degree type"
  ) + theme_minimal() +
  theme(legend.position = c(0.2, 0.8),
        legend.background = element_rect(fill = "white", 
                                         linewidth=0.5, 
                                         linetype="solid", 
                                         colour ="grey"))
```

::: callout-important
`theme(legend.position = c())` and `theme(legend.background = element_rect())` sourced from:

ggplot2 legend : Easy steps to change the position and the appearance of a graph legend in R software. (n.d). STHDA. <https://www.sthda.com/english/wiki/ggplot2-legend-easy-steps-to-change-the-position-and-the-appearance-of-a-graph-legend-in-r-software>
:::
